name: Docker Build and Push

on:
  # üëá CH·ªà ch·∫°y khi workflow CI - Test and Lint ch·∫°y xong
  workflow_run:
    workflows: ["CI - Test and Lint"]   # t√™n ph·∫£i tr√πng v·ªõi workflow CI c·ªßa b·∫°n
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}

jobs:
  build-and-push:
    # üëá n·∫øu CI fail th√¨ KH√îNG build
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        service:
          - name: client_app
            image: foodfast-client
          - name: restaurant_app
            image: foodfast-restaurant
          - name: admin_app
            image: foodfast-admin
          - name: drone_manage
            image: foodfast-drone
          - name: server_app
            image: foodfast-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # d√πng sha ƒë·ªÉ bi·∫øt image g·∫Øn v·ªõi commit n√†o
            type=sha
            # n·∫øu branch l√† default (th∆∞·ªùng l√† main) th√¨ g·∫Øn th√™m latest
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service.name }}
          file: ./${{ matrix.service.name }}/Dockerfile
          # PR th√¨ build test th√¥i, kh√¥ng push
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service.image }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service.image }}:buildcache,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Image digest
        run: echo ${{ steps.meta.outputs.digest }}
