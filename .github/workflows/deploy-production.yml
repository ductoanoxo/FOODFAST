name: Deploy to Production

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose to server
        run: |
          scp docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/foodfast/

      - name: Deploy with Docker Compose
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd ~/foodfast
            
            # Pull latest images
            export IMAGE_TAG=${{ github.ref_name }}
            export DOCKER_REGISTRY=ghcr.io
            export DOCKER_USERNAME=${{ github.repository_owner }}
            
            docker-compose pull
            
            # Stop and remove old containers
            docker-compose down
            
            # Start new containers
            docker-compose up -d
            
            # Clean up old images
            docker image prune -af --filter "until=72h"
            
            # Show running containers
            docker-compose ps
          EOF

      - name: Health check
        run: |
          sleep 30
          curl -f http://${{ secrets.SERVER_HOST }}:5000/api/health || exit 1

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi
